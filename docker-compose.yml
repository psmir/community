version: '2.1'

volumes:
  postgres_data: {}

services:
  setup: 
    build:
      context: .
      dockerfile: ./docker/app/DockerFile
    environment:
      - DATABASE_URL=db
      - DATABASE_NAME=community_production
      - DATABASE_PASSWORD=password      
      - DATABASE_USER=postgres
      - RAILS_ENV=production
      - RACK_ENV=production
    entrypoint: ./setup.sh
    depends_on:
      - db
  app:
    restart: always
    build:
      context: .
      dockerfile: ./docker/app/DockerFile
    depends_on:
      - setup  
    environment:
      - DATABASE_URL=db
      - DATABASE_NAME=community_production
      - DATABASE_PASSWORD=password
      - DATABASE_USER=postgres
      - RAILS_ENV=production
      - RACK_ENV=production
      - ACTION_CABLE_URL=ws://community.com/cable
      - ACTION_CABLE_ALLOWED_REQUEST_ORIGINS=http://community.com|http://localhost
    volumes:
      - ./app:/var/www/community/app
      - ./public:/var/www/community/public
  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=community_production
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build:
      context: .
      dockerfile: ./docker/web/DockerFile
    depends_on:
      - app
    ports:
      - 80:80
    volumes:
      - ./public:/public